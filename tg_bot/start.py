from telebot import types
from demo_data.demo_db import find_user, add_user, get_occasions
from tg_bot.keyboards import create_occasion_keyboard
from tg_bot.states import UserState


def send_welcome(bot, message, user_data):
    user_id = message.chat.id
    user_data[user_id] = UserState()

    user = find_user(user_id)
    if not user:
        user_info = bot.get_chat(user_id)
        full_name = user_info.first_name
        if user_info.last_name:
            full_name += " " + user_info.last_name
        add_user(tg_id=user_id, full_name=full_name, address="", phone="")

    markup = create_occasion_keyboard()

    bot.send_message(
        message.chat.id,
        "üå∏ *FlowerShop* - –±—É–∫–µ—Ç—ã —Å–æ —Å–º—ã—Å–ª–æ–º!\n\n"
        "–ö –∫–∞–∫–æ–º—É —Å–æ–±—ã—Ç–∏—é –≥–æ—Ç–æ–≤–∏–º—Å—è? –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –ª–∏–±–æ —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π:",
        reply_markup=markup,
        parse_mode="Markdown",
    )


def handle_other_occasion(bot, message, user_data):
    user_id = message.chat.id
    if user_id not in user_data:
        user_data[user_id] = UserState()

    user_data[user_id].occasion = "–¥—Ä—É–≥–æ–π –ø–æ–≤–æ–¥"
    markup = types.ReplyKeyboardRemove()
    bot.send_message(
        message.chat.id,
        "‚úçÔ∏è *–ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π –ø–æ–≤–æ–¥:*",
        reply_markup=markup,
        parse_mode="Markdown",
    )
    user_data[user_id].waiting_custom_occasion = True


def handle_custom_occasion(bot, message, user_data):
    user_id = message.chat.id
    custom_occasion = message.text.strip()
    user_data[user_id].waiting_custom_occasion = False
    user_data[user_id].custom_occasion = custom_occasion
    user_data[user_id].occasion = "–¥—Ä—É–≥–æ–π –ø–æ–≤–æ–¥"

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤—ã–±–æ—Ä—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞
    user_data[user_id].budget = None
    user_data[user_id].color_scheme = None
    user_data[user_id].color_scheme_set = False
    user_data[user_id].excluded_flowers = []

    from tg_bot.keyboards import create_color_scheme_keyboard

    markup = create_color_scheme_keyboard()

    bot.send_message(
        message.chat.id,
        "üé® *–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç–æ–≤—É—é –≥–∞–º–º—É:*",
        reply_markup=markup,
        parse_mode="Markdown",
    )


def setup_start_handlers(bot, user_data):
    @bot.message_handler(commands=["start"])
    def start_handler(message):
        send_welcome(bot, message, user_data)

    @bot.message_handler(func=lambda message: message.text == "–¥—Ä—É–≥–æ–π –ø–æ–≤–æ–¥")
    def other_occasion_handler(message):
        handle_other_occasion(bot, message, user_data)
