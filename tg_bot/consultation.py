from telebot import types
from demo_data.demo_db import add_consultation, find_user
from tg_bot.keyboards import create_phone_keyboard
from tg_bot.filters import contact_filter
import demo_data.demo_db as db


def handle_consultation_contact(bot, message, user_data):
    user_id = message.chat.id
    phone = message.contact.phone_number
    
    consultation_data = add_consultation(
        customer=user_id,
        phone=phone,
        occasion=getattr(user_data[user_id], "occasion", "–Ω–µ —É–∫–∞–∑–∞–Ω"),
        budget=0,
        preferred_colors=[user_data[user_id].color_scheme] if user_data[user_id].color_scheme else [],
        excluded_flowers=user_data[user_id].excluded_flowers,
    )

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ñ–ª–æ—Ä–∏—Å—Ç—É (–∑–∞–≥–ª—É—à–∫–∞)
    florist_chat_id = 000000000  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Ñ–ª–æ—Ä–∏—Å—Ç–∞
    try:
        bot.send_message(
            florist_chat_id,
            f"üìû *–ù–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è!*\n\n"
            f"–ö–ª–∏–µ–Ω—Ç: {message.chat.first_name}\n"
            f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
            f"–ü–æ–≤–æ–¥: {getattr(user_data[user_id], 'occasion', '–Ω–µ —É–∫–∞–∑–∞–Ω')}\n"
            f"ID –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏: {consultation_data['pk']}",
            parse_mode="Markdown",
        )
    except:
        pass

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üíê –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±—É–∫–µ—Ç—ã"))

    bot.send_message(
        message.chat.id,
        "‚úÖ *–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∑–∞–∫–∞–∑–∞–Ω–∞!*\n\n"
        "–§–ª–æ—Ä–∏—Å—Ç —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏. –ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ –≥–æ—Ç–æ–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏!",
        reply_markup=markup,
        parse_mode="Markdown",
    )

    user_data[user_id].consultation_mode = False

def setup_consultation_handlers(bot, user_data):
    
    @bot.callback_query_handler(func=lambda call: call.data == "consultation")
    def handle_consultation_callback(call):
        markup = create_phone_keyboard()
        bot.send_message(
            call.message.chat.id,
            "üë©‚Äçüé® *–ó–∞–∫–∞–∑ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Ñ–ª–æ—Ä–∏—Å—Ç–∞*\n\n"
            "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏ –Ω–∞—à —Ñ–ª–æ—Ä–∏—Å—Ç –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 20 –º–∏–Ω—É—Ç!",
            reply_markup=markup,
            parse_mode="Markdown",
        )
        user_data[call.message.chat.id].consultation_mode = True
        bot.answer_callback_query(call.id)

    @bot.message_handler(func=lambda message: contact_filter(message) and 
                      user_data.get(message.chat.id) and 
                      getattr(user_data[message.chat.id], "consultation_mode", False))
    def consultation_contact_handler(message):
        handle_consultation_contact(bot, message, user_data)